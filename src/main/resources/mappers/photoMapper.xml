<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.onul.photo.dao.PhotoDAO">
 	<select id="selectphotoListOrderByHit" resultType="com.onul.photo.model.Photo">
 		SELECT
 			`id`
			, `userId`
			, `nickName`
			, `profileImage`
			, `postType`
			, `content`
			, `imagePath`
			, `hit`
			, `createdAt`
			, `updatedAt`
		FROM
			`photo`
		ORDER BY `hit` DESC
		LIMIT 4		
 	</select>
 		
 	<select id="selectPhotoById" resultType="com.onul.photo.model.Photo">
 		SELECT
 			`id`
			, `userId`
			, `nickName`
			, `profileImage`
			, `postType`
			, `content`
			, `imagePath`
			, `hit`
			, `createdAt`
			, `updatedAt`
		FROM
			`photo`
		WHERE
			`id` = #{id}
 	</select>
 	
 	<select id="selectPhotoListByUserId" resultType="com.onul.photo.model.Photo">
 		SELECT
 			`id`
			, `userId`
			, `nickName`
			, `profileImage`
			, `postType`
			, `content`
			, `imagePath`
			, `hit`
			, `createdAt`
			, `updatedAt`
		FROM
			`photo`
		WHERE
			`userId` = #{userId}
		ORDER BY `id` DESC	
 	</select>
 	
 	<select id="selectPhotoList" resultType="com.onul.photo.model.Photo">
 		SELECT
 			`id`
			, `userId`
			, `nickName`
			, `profileImage`
			, `postType`
			, `content`
			, `imagePath`
			, `hit`
			, `createdAt`
			, `updatedAt`
		FROM
			`photo`
		ORDER BY `id` DESC	
 	</select>
 	
 	<update id="updatePhoto" parameterType="map">
 		UPDATE 
 			`photo`
 		SET 	
			`content` = #{content}
			<if test="imagePath != null">
			, `imagePath` = #{imagePath}
			</if>
			, `updatedAt` = NOW()
		WHERE
			`id` = #{id}	
 	</update>
 	
 	<update id="updateHit" parameterType="int">
 		UPDATE 
 			`photo`
 		SET
 			`hit` = hit + 1
 		WHERE
 			`id` = #{id}		
 	</update>
 	
 	<insert id="insertPhoto" parameterType="com.onul.photo.model.Photo" useGeneratedKeys="true" keyProperty="id">
 		INSERT INTO `photo`
 		(
 			`userId`
			, `nickName`
			, `profileImage`
			, `postType`
			, `content`
			, `imagePath`
			, `createdAt`
			, `updatedAt`
 		)
 		VALUES
 		(
 			#{userId}
 			, #{nickName}
 			, #{profileImage}
 			, #{postType}
 			, #{content}
 			, #{imagePath}
 			, NOW()
 			, NOW()
 		)
 	</insert>
 	
 	<delete id="deletePhoto" parameterType="map">
 		DELETE
 		FROM
 			`photo`
 		WHERE
 			`id` = #{id}
 			AND `userId` = #{userId}	
 	</delete>
 </mapper>